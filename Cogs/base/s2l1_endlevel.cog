# Jedi Knight Cog Script
#
# S2L1_ENDLEVEL.COG
#
# Endlevel cog for level S2L1
#
# [KS & TT]
#
# (C) 1997 LucasArts Entertainment Co. All Rights Reserved
# ========================================================================================

symbols

message  startup
message  user0
message  shutdown
message  timer
message  user1
message  user2

int	   player            local
sound    goalsnd=Accomplish1.wav    local

thing    dome

int      dummy             local
int      soundnum             local
int      explosion            local
int      done=0               local
int      done2=0              local
int      player               local
int	   cogstringin=62109	local
int	   cogstringout=62107	local
int	   found=0			local

cog      invcog			local
cog      goalcog

sound    voicein=mj62109.wav
sound    voiceout=mj62107.wav
sound    ticking

end

# ========================================================================================

## Code Section
code

startup:
   // This is the master COG, so register it.
   SetMasterCOG(GetSelfCOG());

   player = GetLocalPlayerThing();

   // Setup the goals first string in cogStrings.uni so the UI knows about it.
   SetInv(player, 99, 21000);

   // Setup all the goals as displayed at start
   SetGoalFlags(player, 0, 1);
   //SetGoalFlags(player, 1, 1);
   //SetGoalFlags(player, 2, 1);
   SetGoalFlags(player, 3, 1);

   // Play the movie
   jkStartupCutscene ("s2l1ocs.san");

   // This is the first level; initialize Mara's default force powers
   SetTimerEx (0.25, 8, 0, 0);

   Return;

# ........................................................................................

timer:
   If(GetSenderID() == 8)
      {
      SetInv(player, 11, 50.0);
      SetInvAvailable(player, 11, 1);

      SetInv(player, 19, 0.0);
      SetInvAvailable(player, 19, 0);
      // Rank 2
      SetInv(player, 20, 2.0);
      SetInv(player, 14, 2*50);
      // Force Jump, level 1
      SetInv(player, 21, 1.0);
      SetInvAvailable(player, 21, 1);
      SetInv(player, 22, 0.0);
      SetInvAvailable(player, 22, 0);
      // Force Seeing, level 1
      SetInv(player, 23, 1.0);
      SetInvAvailable(player, 23, 1);
      // Force Pull, level 1
      SetInv(player, 24, 1.0);
      SetInvAvailable(player, 24, 1);
      SetInv(player, 25, 0.0);
      SetInvAvailable(player, 25, 0);
      SetInv(player, 26, 0.0);
      SetInvAvailable(player, 26, 0);
      SetInv(player, 27, 0.0);
      SetInvAvailable(player, 27, 0);
      SetInv(player, 28, 0.0);
      SetInvAvailable(player, 28, 0);
      SetInv(player, 29, 0.0);
      SetInvAvailable(player, 29, 0);
      SetInv(player, 30, 0.0);
      SetInvAvailable(player, 30, 0);
      SetInv(player, 31, 0.0);
      SetInvAvailable(player, 31, 0);
      SetInv(player, 32, 0.0);
      SetInvAvailable(player, 32, 0);
      SetInv(player, 33, 0.0);
      SetInvAvailable(player, 33, 0);
      SetInv(player, 34, 0.0);
      SetInvAvailable(player, 34, 0);
      SetInv(player, 35, 0.0);
      SetInvAvailable(player, 35, 0);
      SetInv(player, 36, 0.0);
      SetInvAvailable(player, 36, 0);
      SetInv(player, 37, 0.0);
      SetInvAvailable(player, 37, 0);
      SetInv(player, 38, 0.0);
      SetInvAvailable(player, 38, 0);
      SetInv(player, 39, 0.0);
      SetInvAvailable(player, 39, 0);
      // 3 Unassigned stars to start
      SetInv(player, 17, 3.0);

      // Resync the force powers!
      jkSyncForcePowers();

      // Reset the weapons (this is the first Mara level)
      SetInv(player, 121, 1.0);
      SetInv(player, 122, 0.0);
      SetInv(player, 123, 0.0);
      SetInv(player, 124, 0.0);
      SetInv(player, 125, 0.0);
      SetInv(player, 126, 0.0);
      SetInv(player, 127, 0.0);
      SetInv(player, 128, 0.0);
      SetInv(player, 129, 0.0);
      SetInv(player, 130, 0.0);

      SetInv(player, 131, 1.0);
      SetInv(player, 132, 1.0);
      SetInv(player, 133, 0.0);
      SetInv(player, 134, 0.0);
      SetInv(player, 135, 0.0);
      SetInv(player, 136, 0.0);
      SetInv(player, 137, 0.0);
      SetInv(player, 138, 0.0);
      SetInv(player, 139, 0.0);
      SetInv(player, 140, 0.0);

      // Reset ammo & energy
      SetInv(player, 12, 0.0);
      SetInv(player, 15, 0.0);
      SetInv(player, 90, 0.0);
      SetInv(player, 91, 0.0);
      SetInv(player, 92, 0.0);

      // Reset inventory
      SetInv(player, 40, 0.0);
      SetInvAvailable(player, 40, 0);
      SetInv(player, 41, 0.0);
      SetInvAvailable(player, 41, 0);
         SetInv(player, 43, 0.0);
      SetInv(player, 44, 0.0);
      SetInv(player, 45, 0.0);
      SetInv(player, 46, 0.0);
      SetInv(player, 47, 0.0);
      SetInv(player, 48, 0.0);
      SetInv(player, 49, 0.0);
      SetInv(player, 50, 0.0);
      SetInv(player, 51, 0.0);
      SetInv(player, 52, 0.0);
      SetInv(player, 53, 0.0);
      SetInv(player, 54, 0.0);
      SetInv(player, 55, 0.0);
      SetInv(player, 56, 0.0);

      // Reset player stats
      SetInv(player, 61, 0.0);
      SetInv(player, 62, 0.0);
      SetInv(player, 64, 0.0);
      SetInv(player, 65, 0.0);
      SetInv(player, 66, 0.0);

      Sleep(0.05);

      // Initialize weapon.
      SetFireWait(player, -1);
      SetMountWait(player, 0);
      SetCurInvWeapon(player, 0);
      SelectWeapon(player, GetWeaponBin(12));
      }
   else
   if (GetSenderID() == 1)
      {
      Sendmessage(goalcog, user0);
      // Print("Sent message to goalcog.");  
      }  

   return;

# ........................................................................................

user0:

   if(GetParam(0) == 4) 
   {
	found=1;
	SetGoalFlags(player, 2, 1);
	Return;
   }
   
   jkPrintUNIString(player, 350);

   if(GetParam(0) == 0)
   {
      PlaySoundThing(goalsnd, player, 1.0, -1, -1, 0);
      SetGoalFlags(player, 0, 2);
	SetGoalFlags(player, 1, 1);
      Return;
   }

   if(GetParam(0) == 1)
   {
      PlaySoundThing(goalsnd, player, 1.0, -1, -1, 0);
      SetGoalFlags(player, 1, 2);
      Return;
   }

   if(GetParam(0) == 2)
   {
	if(found==1)
		{
      	SetGoalFlags(player, 2, 2);
      	PlaySoundThing(goalsnd, player, 1.0, -1, -1, 0);
    		}
	else
		{
		SetGoalFlags(player, 2, 3);
		PlaySoundThing(goalsnd, player, 1.0, -1, -1, 0);
		}
	Return;
   }

   if(GetParam(0) == 3)
   {
      PlaySoundThing(goalsnd, player, 1.0, -1, -1, 0);
      SetGoalFlags(player, 3, 2);

      // Wait a bit before level ends
	Sleep(2.0);
	player=GetLocalPlayerThing();
	If(GetThingHealth(player) <= 0)
		{
		return;
		}
	else
		{
      	jkEndLevel(1);
		}     
 	Return;
   }

   Return;

user1:
   if(done2) return;
   invcog=GetSenderRef();
   // Print("Endlevel cog received user1 message");
   player=GetLocalPlayerThing();
   done2=1;
   // Printflex(VectorDist(GetThingPos(dome), GetThingPos(player)));
   if (VectorDist(GetThingPos(dome), GetThingPos(player)) < 0.9)
      {
      // Print("Player in range. Sent user1 to invcog.");
      SendMessage(invcog, user1);
      PlaySoundLocal(voicein, 1.0, 0.0, 0);
	jkPrintUNIString(-1, cogstringin);
	SetActorFlags(player,0x240000);
	Sleep(2);
	jkEndLevel(1);
      }
   else
      {
      // Print("Player out of range.");
      PlaySoundLocal(voiceout, 1.0, 0.0, 0);
	jkPrintUNIString(-1, cogstringout);
      Sleep(5);
      done2=0;
      }
   return;

user2:
   // Print("Endlevel received user2 message from invcog.");
   if (done) return;
   done=1;
   PlaySoundThing(ticking, dome, 1.0, -1, -1, 0);
   SetTimerEx(2, 1, 0, 0);

   Return;
   
pulse:
   posOffset = VectorSet(Rand()*0.01, Rand()*0.01, Rand()*0.01);
   angOffset = VectorSet(Rand(), Rand(), Rand());
   SetPOVShake(posOffset, angOffset, .5, 80.0);
   Setpulse(0);
   return;

# ........................................................................................

shutdown:
   ChangeInv(player, 16, 2);
      // Give a force star if the player finds all the secrets
      if((GetInv(player, 71) != 0) && (GetInv(player, 70) == GetInv(player, 71)))
         ChangeInv(player, 16, 1);

   Return;

end

 